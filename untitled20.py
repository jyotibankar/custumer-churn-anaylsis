# -*- coding: utf-8 -*-
"""Untitled20.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ugKkGsZCOnGGNGOnpV1K79MtlR4XYxLs
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

df=pd.read_csv('Customer Churn.csv')

df

df.info()

df['TotalCharges']=df['TotalCharges'].replace(' ','0')
df['TotalCharges']=df['TotalCharges'].astype('float')

df.info()
#replacing totolcharge object into float all null values replace with 0

df.isnull().sum().sum()

df.describe()

df['customerID'].duplicated().sum()

def conv(value):
  if value==1:
    return "yes"
  else:
    return "no"

df['SeniorCitizen']=df['SeniorCitizen'].apply(conv)
#to change 0 to 1 yes or no to more undrstand the value

df.head()

ax=sns.countplot(x=df['Churn'], data=df)
ax.bar_label(ax.containers[0])
plt.show()

gb=df.groupby("Churn").agg({'Churn':'count'})
plt.pie(gb['Churn'],labels=gb.index,autopct='%1.2f%%')
plt.title("percentage of churn plot")
plt.show()

"""## #in the pie chart we conclude that the 26,54% of our customer is churned out"""



plt.figure(figsize=(4,4))
sns.countplot(x="gender",data=df,hue="Churn")
plt.show()

"""## #there is no different between female and male churnout almost same"""



plt.figure(figsize=(3,4))
sns.countplot(x="gender",data=df,hue="Churn")
plt.title("Churn by Gender")
plt.show()

plt.figure(figsize=(3,4))
sns.countplot(x="SeniorCitizen",data=df,hue="Churn")
plt.title("Churn by Gender")
plt.show()

crosstab = pd.crosstab(df["SeniorCitizen"], df["Churn"])

# Plot a stacked bar chart
crosstab.plot(kind="bar", stacked=True, figsize=(3, 4), color=["skyblue", "orange"])
plt.title("Churn by SeniorCitizen")
plt.xlabel("Senior Citizen")
plt.ylabel("Count")
plt.legend(title="Churn")
plt.show()

grouped = df.groupby(['SeniorCitizen', 'Churn']).size().reset_index(name='Count')
total_counts = grouped.groupby('SeniorCitizen')['Count'].transform('sum')
grouped['Percentage'] = (grouped['Count'] / total_counts) * 100

# Pivot the data for stacked bar plot
pivot_data = grouped.pivot(index='SeniorCitizen', columns='Churn', values='Percentage').fillna(0)

# Plot the stacked bar chart
pivot_data.plot(kind='bar', stacked=True, figsize=(6, 4), colormap='viridis')

# Add percentage labels
for idx, row in enumerate(pivot_data.values):
    cumulative = 0
    for col_idx, value in enumerate(row):
        cumulative += value
        plt.text(idx, cumulative - value / 2, f"{value:.1f}%", ha='center', va='center', color='white', fontsize=9)

plt.title("Churn by Senior Citizen Status")
plt.xlabel("Senior Citizen")
plt.ylabel("Percentage")
plt.legend(title="Churn")
plt.tight_layout()
plt.show()

"""## #greater percentage of senior citizen people are churned out here"""



plt.figure(figsize=(9,4))
sns.histplot(x="tenure",data=df,bins=72,hue="Churn")
plt.show()

"""
# #people who have used our serices who are churned out who can only give services 1 or 2 months and people who are long term services are stayed"""



plt.figure(figsize=(4,4))
ax=sns.countplot(x="Contract",data=df,hue="Churn")
ax.bar_label((ax.containers[0]))
plt.title("Count of Customes by Senior Citizen")
plt.show()

"""### #people who are monthly to monthly over contract churns compared to year and two year **contract**"""



df.columns.values

# List of categorical columns
columns = [
    'PhoneService', 'MultipleLines', 'InternetService',
    'OnlineSecurity', 'OnlineBackup', 'DeviceProtection',
    'TechSupport', 'StreamingTV', 'StreamingMovies'
]

# Create subplots
fig, axes = plt.subplots(nrows=3, ncols=3, figsize=(15, 12))  # 3x3 grid
axes = axes.flatten()  # Flatten to easily iterate

# Loop through columns and create countplots
for i, col in enumerate(columns):
    sns.countplot(x=df[col], ax=axes[i], palette="viridis", hue= df['Churn'])
    axes[i].set_title(f"Distribution of {col}")
    axes[i].set_xlabel("")
    axes[i].set_ylabel("Count")
    axes[i].tick_params(axis='x', rotation=45)  # Rotate labels for better readability

# Adjust layout
plt.tight_layout()
plt.show()

# @title Default title text
#Each subplot represents a different service, such as PhoneService, InternetService, OnlineSecurity, and StreamingTV,
 with bars indicating the number of customers who stayed or churned. The trends suggest that certain services,
 like OnlineSecurity and TechSupport, may have a strong correlation with churn, as customers without these services appear to have higher churn
 rates. Additionally, InternetService and
Streaming preferences show noticeable differences between churned and retained customers.

plt.figure(figsize=(10,5))
ax=sns.countplot(x="PaymentMethod",data=df,hue="Churn")
ax.bar_label(ax.containers[0])
ax.bar_label(ax.containers[1])
plt.title("Churn by Gender")
plt.show()

# @title Default title text
customer is likely to check when he is electoronic check as a payment method.